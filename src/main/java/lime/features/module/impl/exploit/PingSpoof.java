package lime.features.module.impl.exploit;

import lime.core.events.EventTarget;
import lime.core.events.impl.EventPacket;
import lime.core.events.impl.EventUpdate;
import lime.features.module.Category;
import lime.features.module.Module;
import lime.features.setting.impl.NumberProperty;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.C00PacketKeepAlive;
import net.minecraft.network.play.server.S01PacketJoinGame;

import java.util.HashMap;
import java.util.HashSet;

public class PingSpoof extends Module {
    private final HashMap<Long, Packet> delayMap = new HashMap<>();
    public PingSpoof() {
        super("Ping Spoof", Category.EXPLOIT);
    }

    private final NumberProperty delay = new NumberProperty("Delay", this, 100, 10000, 1000, 50);

    @Override
    public void onEnable() {
        delayMap.clear();
    }

    @EventTarget
    public void onUpdate(EventUpdate e) {
        for (Long aLong : new HashSet<>(delayMap.keySet())) {
            if (System.currentTimeMillis() - aLong >= 0) {
                mc.getNetHandler().sendPacketNoEvent(delayMap.get(aLong));
                delayMap.remove(aLong);
            }
        }
    }

    @EventTarget
    public void onPacket(EventPacket e) {
        if (e.getPacket() instanceof S01PacketJoinGame) {
            delayMap.clear();
        }
        if (e.getPacket() instanceof C00PacketKeepAlive) {
            delayMap.put(System.currentTimeMillis() + (long) delay.getCurrent(), e.getPacket());
            e.setCanceled(true);
        }
    }
}
